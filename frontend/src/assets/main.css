@import './base.css'; /* 保留 - base.css 可能包含了一些基礎重設，如 box-sizing */

/* --- 全域重設與基礎樣式 --- */
html,
body {
  margin: 0; /* 移除瀏覽器預設的 html 和 body 邊距 */
  padding: 0; /* 移除瀏覽器預設的 html 和 body 內距 */
  width: 100%; /* 讓 html 和 body 佔滿視窗寬度 */
  height: 100%; /* 讓 html 和 body 佔滿視窗高度 */
  /* overflow-x: hidden; /* 可選：如果遇到 100vw 導致意外水平滾動條的問題，可以取消註解此行 */
}

/*
  #app 元素應作為一個簡單的容器，允許其子元件（即您 App.vue 的根元素）
  來管理整個視窗的佈局。因此，需要移除會限制 #app 範圍的樣式。
  您 App.vue 中的 #app-container 設定了 width: 100vw; height: 100vh;
  這表示它希望填滿整個可視區域。
*/
#app {
  width: 100%; /* #app 佔滿其父元素（body）的寬度 */
  height: 100%; /* #app 佔滿其父元素（body）的高度 */
  font-weight: normal; /* 保留您原有的字體粗細設定 */

  /* 以下是您原有的 #app 樣式中被移除或修改的部分，因為它們會限制 #app 的大小和位置：
     max-width: 1280px; (移除，不再限制最大寬度)
     margin: 0 auto;    (移除，不再使其居中)
     padding: 2rem;     (移除，不再有內邊距)
     以及在 @media (min-width: 1024px) 中的 display: grid 和 padding: 0 2rem 也應配合調整或移除
  */
}

/* --- 連結樣式 (通常可以保留) --- */
a,
.green {
  text-decoration: none;
  color: hsla(160, 100%, 37%, 1);
  transition: 0.4s;
  padding: 3px;
}

@media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}

/* --- 針對大螢幕的媒體查詢 (min-width: 1024px) --- */
@media (min-width: 1024px) {
  /*
    原有的 body { display: flex; place-items: center; } 會嘗試將 #app 垂直和水平居中。
    如果 #app 已經設定為 width: 100%; height: 100%;，這個 body 樣式可能不再需要，
    或者其效果會有所不同。對於全螢幕應用，通常不需要 body 上的 flex 居中。
  */
  body {
    /* display: flex; */ /* 如果 #app 填滿 body，這個 flex 佈局可能不再需要 */
    /* place-items: center; */
  }

  /*
    原有的 #app { display: grid; grid-template-columns: 1fr 1fr; padding: 0 2rem; }
    會將 #app 的直接子元素變為網格佈局。
    如果您的 App.vue (<div id="app-container">...</div>) 是 #app 的唯一直接子元素，
    並且 App.vue 內部自己管理佈局（如 Live2D 和聊天面板的 flex 佈局），
    那麼 #app 上的 grid 樣式和 padding 就會產生衝突或不再需要。
  */
  #app {
    /* padding: 0 2rem; */ /* 移除，以允許 #app-container 填滿 #app */
    /* display: grid; */   /* 移除，讓 App.vue 內部佈局生效 */
    /* grid-template-columns: 1fr 1fr; */ /* 移除 */
  }
}